(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{409:function(t,a,e){"use strict";e.r(a);var s=e(2),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("目录\n")]),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-js中如何实现前后端交互"}},[t._v("1, js中如何实现前后端交互?")])]),a("li",[a("a",{attrs:{href:"#_2-form表单请求后端如何实现"}},[t._v("2, form表单请求后端如何实现?")])]),a("li",[a("a",{attrs:{href:"#_3-ajax请求后端如何实现"}},[t._v("3,ajax请求后端如何实现?")])]),a("li",[a("a",{attrs:{href:"#_4-get和post请求方式的区别"}},[t._v("4,get和post请求方式的区别?")])]),a("li",[a("a",{attrs:{href:"#_5-json是什么-如何操作"}},[t._v("5,JSON是什么?如何操作?")])]),a("li",[a("a",{attrs:{href:"#_6-什么是同源-什么是跨域"}},[t._v("6，什么是同源?什么是跨域?")])]),a("li",[a("a",{attrs:{href:"#_7-jsonp的实现逻辑"}},[t._v("7，JSONP的实现逻辑?")])]),a("li",[a("a",{attrs:{href:"#_8-两个页面之间如何传递数据"}},[t._v("8，两个页面之间如何传递数据?")])]),a("li",[a("a",{attrs:{href:"#_9-本地存储与会话存储与cookie的区别"}},[t._v("9，本地存储与会话存储与cookie的区别?")])]),a("li",[a("a",{attrs:{href:"#_10-如何获取地址栏数据"}},[t._v("10，如何获取地址栏数据?")])]),a("li",[a("a",{attrs:{href:"#_11-flex布局如何实现子元素水平方向两端对齐"}},[t._v("11， flex布局如何实现子元素水平方向两端对齐?")])]),a("li",[a("a",{attrs:{href:"#_12-flex布局如何实现子元素水平垂直居中"}},[t._v("12,flex布局如何实现子元素水平垂直居中?")])]),a("li",[a("a",{attrs:{href:"#_13-flex布局如何实现子元素自适应铺满父元素"}},[t._v("13, flex布局如何实现子元素自适应铺满父元素?")])]),a("li",[a("a",{attrs:{href:"#_14-flex布局如何实现子元素纵向排列并水平居中"}},[t._v("14，flex布局如何实现子元素纵向排列并水平居中?")])]),a("li",[a("a",{attrs:{href:"#_15-移动端页面如何设置视口"}},[t._v("15，移动端页面如何设置视口?")])])])]),a("p"),t._v(" "),a("h3",{attrs:{id:"_1-js中如何实现前后端交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-js中如何实现前后端交互"}},[t._v("#")]),t._v(" 1, js中如何实现前后端交互?")]),t._v(" "),a("p",[t._v("form表单 ajax异步请求")]),t._v(" "),a("h3",{attrs:{id:"_2-form表单请求后端如何实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-form表单请求后端如何实现"}},[t._v("#")]),t._v(" 2, form表单请求后端如何实现?")]),t._v(" "),a("form",{attrs:{aciton:"",method:""}},[a("input",{attrs:{type:"text",name:"a"}}),t._v(" "),a("input",{attrs:{type:"submit"}})]),t._v("\n//"),a("form",{attrs:{aciton:"",method:""}},[t._v("\n//    "),a("input",{attrs:{type:"text",name:"a"}}),t._v("\n //    "),a("input",{attrs:{type:"submit"}}),t._v("\n//")]),t._v(" "),a("h3",{attrs:{id:"_3-ajax请求后端如何实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-ajax请求后端如何实现"}},[t._v("#")]),t._v(" 3,ajax请求后端如何实现?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var xhr=new XMLHttpRequest();\n\nxhr.open('GET',url)\n\nxhr.send()\n\nxhr.onreadystatechange=function(){\n\n\tif(xhr.readyState==4&&xhr.status==200){\n\nconsole.log(res)\n\n}\n\n }\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 1.创建ajax对象\n            var xhr = new XMLHttpRequest();\n           \n            // 2.发送请求 open(method,url)\n            xhr.open("post", "links/2.post.php")\n            \n            // post 请求  设置请求头\n            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");\n            // 3.发送数据\n            xhr.send("username=ahua&age=20")\n          \n            // 4.监听响应结果\n            xhr.onreadystatechange = function () {\n                // 1.请求状态码  2.协议状态码\n                if(xhr.readyState == 4 && xhr.status == 200){\n                    // responseText response 接口中的数据\n                    res.innerHTML = xhr.response\n                }else{\n                    console.log("做请求失败的操作")\n                }\n            }\n')])])]),a("h3",{attrs:{id:"_4-get和post请求方式的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-get和post请求方式的区别"}},[t._v("#")]),t._v(" 4,get和post请求方式的区别?")]),t._v(" "),a("p",[t._v("get获取数据 post提交数据")]),t._v(" "),a("p",[t._v("get明文传输 不安全 传输数据小")]),t._v(" "),a("p",[t._v("...")]),t._v(" "),a("h3",{attrs:{id:"_5-json是什么-如何操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-json是什么-如何操作"}},[t._v("#")]),t._v(" 5,JSON是什么?如何操作?")]),t._v(" "),a("p",[t._v("js对象格式的字符串 ，对象的属性名必须是带引号的字符串")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var obj = JSON.parse(string)\n\nvar str = JSON.Stringify(obj)\n")])])]),a("h3",{attrs:{id:"_6-什么是同源-什么是跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-什么是同源-什么是跨域"}},[t._v("#")]),t._v(" 6，什么是同源?什么是跨域?")]),t._v(" "),a("p",[t._v("同协议同域名同端口")]),t._v(" "),a("p",[t._v("如果有一个不同就是跨域")]),t._v(" "),a("h3",{attrs:{id:"_7-jsonp的实现逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-jsonp的实现逻辑"}},[t._v("#")]),t._v(" 7，JSONP的实现逻辑?")]),t._v(" "),a("p",[t._v("script的src属性访问不受同源策略影响，动态生成script标签指定请求地址，利用回调函数接口返回的数据")]),t._v(" "),a("h3",{attrs:{id:"_8-两个页面之间如何传递数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-两个页面之间如何传递数据"}},[t._v("#")]),t._v(" 8，两个页面之间如何传递数据?")]),t._v(" "),a("p",[t._v("本地存储，地址栏中用问号或者#号拼接数据")]),t._v(" "),a("h3",{attrs:{id:"_9-本地存储与会话存储与cookie的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-本地存储与会话存储与cookie的区别"}},[t._v("#")]),t._v(" 9，本地存储与会话存储与cookie的区别?")]),t._v(" "),a("p",[t._v("localStotage 本地存储 需要手动删除")]),t._v(" "),a("p",[t._v("sessionStorage 本地存储 页面关闭即清空")]),t._v(" "),a("p",[t._v("cookie 可以设置过期时间")]),t._v(" "),a("h3",{attrs:{id:"_10-如何获取地址栏数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-如何获取地址栏数据"}},[t._v("#")]),t._v(" 10，如何获取地址栏数据?")]),t._v(" "),a("p",[t._v("location.search获取地址栏问号之后的数据")]),t._v(" "),a("p",[t._v("location.hash获取地址栏#号后面的数据")]),t._v(" "),a("h3",{attrs:{id:"_11-flex布局如何实现子元素水平方向两端对齐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-flex布局如何实现子元素水平方向两端对齐"}},[t._v("#")]),t._v(" 11， flex布局如何实现子元素水平方向两端对齐?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("父元素{\n\ndisplay:flex;\n\nflex-dection:row;\n\njustify-content:space-between\n\n}\n")])])]),a("h3",{attrs:{id:"_12-flex布局如何实现子元素水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-flex布局如何实现子元素水平垂直居中"}},[t._v("#")]),t._v(" 12,flex布局如何实现子元素水平垂直居中?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("父元素{\n\ndisplay:flex;\n\njustify-content:center;\n\nalign-items:center;\n\n}\n")])])]),a("h3",{attrs:{id:"_13-flex布局如何实现子元素自适应铺满父元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-flex布局如何实现子元素自适应铺满父元素"}},[t._v("#")]),t._v(" 13, flex布局如何实现子元素自适应铺满父元素?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("子元素{\n\nflex:1\n\n}\n")])])]),a("h3",{attrs:{id:"_14-flex布局如何实现子元素纵向排列并水平居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-flex布局如何实现子元素纵向排列并水平居中"}},[t._v("#")]),t._v(" 14，flex布局如何实现子元素纵向排列并水平居中?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("父元素{\n\ndisplay:flex;\nflex-derction:column;\nalign-items:center;\n\n}\n")])])]),a("h3",{attrs:{id:"_15-移动端页面如何设置视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-移动端页面如何设置视口"}},[t._v("#")]),t._v(" 15，移动端页面如何设置视口?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<meta type='viewport' content='width=device-width,initial-scale=1.0,user-scalable=no'>\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);