(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{416:function(t,r,n){"use strict";n.r(r);var a=n(2),s=Object(a.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul")]),t("p"),this._v(" "),t("h1",{attrs:{id:"排序算法之冒泡排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序算法之冒泡排序"}},[this._v("#")]),this._v(" 排序算法之冒泡排序")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function mpSort(arr){\n\tfor(let i=0;i<arr.length;i++){\n\t\tfor(let j=0;j<arr.length-1;j++){\n\t\t//两个for循环遍历数组中的所有数据\n\t\t\tif(arr[j]>arr[j+1]){\n\t\t\tlet t = arr[j]\n\t\t\tarr[j]=arr[j+1]\n\t\t\tarr[j+1]=t\n\t\t//当前数大小与后一位数大小进行比对，若当前数比后一位大则交换位置\n\t\t\n\t\t\t}\n\t\t}\n\t}\n\treturn arr //返回排序后的数组\n}\nconst arr =[3,2,1]\nconsole.log(mpSort(arr))\n\n//输出\n1，2，3\n")])])])])}),[],!1,null,null,null);r.default=s.exports}}]);