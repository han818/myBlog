(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{421:function(a,n,t){"use strict";t.r(n);var e=t(2),s=Object(e.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#介绍"}},[a._v("介绍")]),n("ul",[n("li",[n("a",{attrs:{href:"#请求状态码"}},[a._v("请求状态码:")])]),n("li",[n("a",{attrs:{href:"#协议状态码"}},[a._v("协议状态码:")])])])]),n("li",[n("a",{attrs:{href:"#ajax-get请求"}},[a._v("ajax  get请求")])]),n("li",[n("a",{attrs:{href:"#ajax-post请求"}},[a._v("ajax post请求")]),n("ul",[n("li",[n("a",{attrs:{href:"#封装ajax"}},[a._v("封装ajax")])])])]),n("li",[n("a",{attrs:{href:"#解决原生ajax跨域方法-jsonp"}},[a._v("解决原生ajax跨域方法:jsonP")])])])]),n("p"),a._v(" "),n("h1",{attrs:{id:"ajax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[a._v("#")]),a._v(" ajax")]),a._v(" "),n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),n("p",[a._v("ajax:异步程序")]),a._v(" "),n("h3",{attrs:{id:"请求状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#请求状态码"}},[a._v("#")]),a._v(" 请求状态码:")]),a._v(" "),n("ul",[n("li",[a._v("​    0: 请求未初始化")]),a._v(" "),n("li",[a._v("​    1: 服务器连接已建立")]),a._v(" "),n("li",[a._v("​    2: 请求已接收")]),a._v(" "),n("li",[a._v("​    3: 请求处理中")]),a._v(" "),n("li",[a._v("​    4: 请求已完成，且响应已就绪")])]),a._v(" "),n("h3",{attrs:{id:"协议状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#协议状态码"}},[a._v("#")]),a._v(" 协议状态码:")]),a._v(" "),n("ul",[n("li",[a._v("​    1XX(临时相应）")]),a._v(" "),n("li",[a._v("​    2XX(成功)")]),a._v(" "),n("li",[a._v("​    200(成功）请求成功")]),a._v(" "),n("li",[a._v("​    3xx（重定向）")]),a._v(" "),n("li",[a._v("​    4xx（请求错误）")]),a._v(" "),n("li",[a._v("​     400（错误请求）： 服务器不理解请求的语法；")]),a._v(" "),n("li",[a._v("​     404（未找到指定文件） 路径问题")]),a._v(" "),n("li",[a._v("​    5XX（服务器错误）")]),a._v(" "),n("li",[a._v("​     500（服务器内部错误）： 服务器遇到错误，无法完成请求；")])]),a._v(" "),n("p",[a._v("​    // ajax: js内置对象  前后端交互方式")]),a._v(" "),n("h2",{attrs:{id:"ajax-get请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax-get请求"}},[a._v("#")]),a._v(" ajax  get请求")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('\n     btn.onclick = function () {\n\n       // 1.创建ajax对象\n\n       var xhr = new XMLHttpRequest();\n\n       console.log(xhr.readyState)\n\n       // 2.发送请求 open(method,url)\n\n       xhr.open("get", "links/2.get.php?username=ahua&age=20")\n\n       console.log(xhr.readyState)\n\n      // 3.发送数据\n\n       xhr.send()\n\n       console.log(xhr.readyState)\n\n       // 4.监听响应结果\n\n       xhr.onreadystatechange = function () {\n\n         // 1.请求状态码  2.协议状态码\n\n        if(xhr.readyState == 4 && xhr.status == 200){\n\n          res.innerHTML = xhr.responseText\n\n    }\n\n  }\n')])])]),n("h2",{attrs:{id:"ajax-post请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax-post请求"}},[a._v("#")]),a._v(" ajax post请求")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(' btn.onclick = function () {\n            // 1.创建ajax对象\n            var xhr = new XMLHttpRequest();\n           \n            // 2.发送请求 open(method,url)\n            xhr.open("post", "links/2.post.php")\n            \n            // post 请求  设置请求头\n            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");\n            // 3.发送数据\n            xhr.send("username=ahua&age=20")\n          \n            // 4.监听响应结果\n            xhr.onreadystatechange = function () {\n                // 1.请求状态码  2.协议状态码\n                if(xhr.readyState == 4 && xhr.status == 200){\n                    // responseText response 接口中的数据\n                    res.innerHTML = xhr.response\n                }else{\n                    console.log("做请求失败的操作")\n                }\n            }\n\n\n        }\n\n')])])]),n("h3",{attrs:{id:"封装ajax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#封装ajax"}},[a._v("#")]),a._v(" 封装ajax")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('  // ajax 封装\n        function ajax(method, url, obj, callback) {\n            // username=awei&age=20\n            // 处理对象格式数据 变成字符串\n            var arr = []\n            for (var key in obj) {\n                arr.push(key + "=" + obj[key])\n            }\n            var data = arr.join("&");\n            // 1.创建ajax对象\n            var xhr = null;\n            // 判断高低版本浏览器\n            if (window.XMLHttpRequest) {\n                xhr = new XMLHttpRequest();//IE7+, Firefox, Chrome, Opera, Safari\n            } else {// code for IE6, IE5\n                xhr = new ActiveXObject("Microsoft.XMLHTTP");\n            }\n            // 判断请求方式 是否为get请求\n            url = method == "get" ? url + "?" + data : url;\n\n            //2.发送请求 \n            xhr.open(method, url)\n\n            // 3.发送数据\n            if (method == "get") {\n                // 说明是get请求  无需发送数据\n                xhr.send(null)\n            } else {\n                // 设置请求头\n                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");\n                // post请求 需发送数据\n                xhr.send(data)\n            }\n            // 4.监听响应结果\n            xhr.onreadystatechange = function () {\n                // 判断 是否请求成功\n                if (xhr.readyState == 4 && xhr.status == 200) {\n                    callback && callback(xhr.response)\n                }\n            }\n\n\n        }\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(' btn.onclick = function () {\n            // 请求方式\n            var method = "post";\n            // 请求接口\n            var url = "links/2.post.php"\n            // 参数\n            var obj = {\n                username: inp.value,\n                age: 20\n            }\n\n\n            // 理想使用方法\n            // ajax("post", "links/2.post.php", obj, function (data) {\n            //     console.log(data)\n            // })\n\n            ajax(\n                method,\n                url,\n                obj,\n                function (data) {\n                    console.log(data)\n                })\n        }\n')])])]),n("h2",{attrs:{id:"解决原生ajax跨域方法-jsonp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决原生ajax跨域方法-jsonp"}},[a._v("#")]),a._v(" 解决原生ajax跨域方法:jsonP")]),a._v(" "),n("p",[a._v("动态生成script")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/* \n        同源策略：协议  域名  端口号 必须一致才可\n        如果有一项不一样 则会出现跨域问题\n        */\nfunction gets(data){\n            console.log(data)\n         }\n //jsonp 解决原生ajax跨域 动态生成script  借助回调函数  拿到接口中的数据\nvar script = document.createElement('script');\n\nscript.src=\"http://www.fastmock.site/mock/9710542a13c39bd87d63f9de555f983c/shops/tables/list?callback=gets\"  //通过?后加回调函数的形式进行跨域\n\ndocument.body.appendChild(script)   \n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);